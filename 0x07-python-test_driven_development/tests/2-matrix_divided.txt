>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix = [[2, 2], [4, 5, 6], [7, 8, 9]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/markkonlan/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 23, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size


>>> matrix_divided([2, 3, 4], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/markkonlan/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 18, in matrix_divided
    raise TypeError("matrix must be a matrix (list of lists) of integers/floats")
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([[2, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/markkonlan/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 28, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
